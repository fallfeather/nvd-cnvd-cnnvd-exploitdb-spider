#coding:utf-8
#Author: fa1lr4in
#核心思路： 发送一个请求，返回json格式的数据，通过json模块进行键值的读取
from openpyxl import Workbook
import requests
import sys,re,time
import calendar
import re,os,json

def mkdir():
	cwd = os.getcwd()
	path = cwd + "\\exploit_db"
	path=path.strip()
	path=path.rstrip("\\")
	isExists=os.path.exists(path)

	# 判断结果
	if not isExists:
		os.makedirs(path) 
		print ('create dir success')
		return True
	else:
		print ('dir is exist')
		return False


def exploit_db():
	mkdir()
	wb = Workbook()
	sheet_nvd = wb.create_sheet(index=0, title="exploit_db") 
	sheets = wb.sheetnames
	ws = wb[sheets[0]]
	rows = ws.rows
	columns = ws.columns
	ws.cell(row=1, column=1).value = "CVE"
	ws.cell(row=1, column=2).value = "edb_id"
	ws.cell(row=1, column=3).value = "漏洞描述"
	ws.cell(row=1, column=4).value = "漏洞公开日期"
	ws.cell(row=1, column=5).value = "作者"
	ws.cell(row=1, column=6).value = "类型"
	ws.cell(row=1, column=7).value = "平台"
	# vuln_name = input("请输入要搜集的组件名称：")
	# print('你要搜集的组件名称为' + vuln_name)
	vuln_name = 'nexus'
	#get vulns_num 
	url = 'https://www.exploit-db.com/?draw=19&columns%5B0%5D%5Bdata%5D=date_published&columns%5B0%5D%5Bname%5D=date_published&columns%5B0%5D%5Bsearchable%5D=true&columns%5B0%5D%5Borderable%5D=true&columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B1%5D%5Bdata%5D=download&columns%5B1%5D%5Bname%5D=download&columns%5B1%5D%5Bsearchable%5D=false&columns%5B1%5D%5Borderable%5D=false&columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B2%5D%5Bdata%5D=application_md5&columns%5B2%5D%5Bname%5D=application_md5&columns%5B2%5D%5Bsearchable%5D=true&columns%5B2%5D%5Borderable%5D=false&columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B2%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B3%5D%5Bdata%5D=verified&columns%5B3%5D%5Bname%5D=verified&columns%5B3%5D%5Bsearchable%5D=true&columns%5B3%5D%5Borderable%5D=false&columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B4%5D%5Bdata%5D=description&columns%5B4%5D%5Bname%5D=description&columns%5B4%5D%5Bsearchable%5D=true&columns%5B4%5D%5Borderable%5D=false&columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B5%5D%5Bdata%5D=type_id&columns%5B5%5D%5Bname%5D=type_id&columns%5B5%5D%5Bsearchable%5D=true&columns%5B5%5D%5Borderable%5D=false&columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B6%5D%5Bdata%5D=platform_id&columns%5B6%5D%5Bname%5D=platform_id&columns%5B6%5D%5Bsearchable%5D=true&columns%5B6%5D%5Borderable%5D=false&columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B7%5D%5Bdata%5D=author_id&columns%5B7%5D%5Bname%5D=author_id&columns%5B7%5D%5Bsearchable%5D=false&columns%5B7%5D%5Borderable%5D=false&columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B8%5D%5Bdata%5D=code&columns%5B8%5D%5Bname%5D=code.code&columns%5B8%5D%5Bsearchable%5D=true&columns%5B8%5D%5Borderable%5D=true&columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B9%5D%5Bdata%5D=id&columns%5B9%5D%5Bname%5D=id&columns%5B9%5D%5Bsearchable%5D=false&columns%5B9%5D%5Borderable%5D=true&columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&order%5B0%5D%5Bcolumn%5D=9&order%5B0%5D%5Bdir%5D=desc&start=0&length=15&search%5Bvalue%5D=' + vuln_name + '&search%5Bregex%5D=false&author=&port=&type=&tag=&platform=&_=1596547882777'
	#data = 'CSRFToken=&cvHazardRating=&cvVultype=&qstartdateXq=&cvUsedStyle=&cvCnnvdUpdatedateXq=&cpvendor=&relLdKey=&hotLd=&isArea=&qcvCname=' + vuln_name + '&qcvCnnvdid=CNNVD%E6%88%96CVE%E7%BC%96%E5%8F%B7&qstartdate=&qenddate='
	headers = {
			'Host': 'www.exploit-db.com',
			'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0',
			'Accept': 'application/json, text/javascript, */*; q=0.01',
			'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
			'Accept-Encoding': 'gzip, deflate',
			'Referer': 'https://www.exploit-db.com/',
			'X-Requested-With': 'XMLHttpRequest',
			'Connection': 'close',
			'Cookie': 'XSRF-TOKEN=eyJpdiI6IkU1NDZRXC9HQmJFa2hOSmtxUGkzRjN3PT0iLCJ2YWx1ZSI6IkpOMjZOcStSM3hWYTZcL2Nhc2g4MEVnd3ROWXlYRnh0NE9KdDhFa3JwNnE1UExyY0J6ZUw3K201SmR3b21Zc3B0IiwibWFjIjoiNTBlZjhmNjBhNWZmMDFmZGEzMjk4NWE5MTgwNDhlMjIxYWRjYmZkODk2MDMwY2M4ZTFiZjdmMjFiMDEwZDlhYyJ9; exploit_database_session=eyJpdiI6IldOXC91UGpcLzVUMDVLWUY4K3daM3ZYdz09IiwidmFsdWUiOiJGaENaMlJDZ1hrV0t1cmJZRCtWeDRaVlpleWlmbitjckVMTDJnd0RrSlZtYzF2MkRNMXhFRlNTMFRTcnNUQ2tSIiwibWFjIjoiOGY3ZDY1ZGY3YTU1YWQ5ZWM1NDU3NWI2Mjg3Y2M3N2U2MDU2ZTE1Mzg0NWIzZTgxN2FhZmZmZDlkNTc5NjZjMiJ9; CookieConsent=-1; _ga=GA1.3.2084911368.1596547587; _gid=GA1.3.447651601.1596547587'
		  }
	resp = requests.get(url,headers=headers)
	#将返回值由str转成json格式，在python中叫做dict
	json_text = json.loads(resp.text)
	vulns_num = json_text['recordsFiltered']
	#get vulns
	session_id = 1596547882777
	for arg in range(0,vulns_num,15):
		session_id = session_id + 1
		url = 'https://www.exploit-db.com/?draw=19&columns%5B0%5D%5Bdata%5D=date_published&columns%5B0%5D%5Bname%5D=date_published&columns%5B0%5D%5Bsearchable%5D=true&columns%5B0%5D%5Borderable%5D=true&columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B1%5D%5Bdata%5D=download&columns%5B1%5D%5Bname%5D=download&columns%5B1%5D%5Bsearchable%5D=false&columns%5B1%5D%5Borderable%5D=false&columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B2%5D%5Bdata%5D=application_md5&columns%5B2%5D%5Bname%5D=application_md5&columns%5B2%5D%5Bsearchable%5D=true&columns%5B2%5D%5Borderable%5D=false&columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B2%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B3%5D%5Bdata%5D=verified&columns%5B3%5D%5Bname%5D=verified&columns%5B3%5D%5Bsearchable%5D=true&columns%5B3%5D%5Borderable%5D=false&columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B4%5D%5Bdata%5D=description&columns%5B4%5D%5Bname%5D=description&columns%5B4%5D%5Bsearchable%5D=true&columns%5B4%5D%5Borderable%5D=false&columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B5%5D%5Bdata%5D=type_id&columns%5B5%5D%5Bname%5D=type_id&columns%5B5%5D%5Bsearchable%5D=true&columns%5B5%5D%5Borderable%5D=false&columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B6%5D%5Bdata%5D=platform_id&columns%5B6%5D%5Bname%5D=platform_id&columns%5B6%5D%5Bsearchable%5D=true&columns%5B6%5D%5Borderable%5D=false&columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B7%5D%5Bdata%5D=author_id&columns%5B7%5D%5Bname%5D=author_id&columns%5B7%5D%5Bsearchable%5D=false&columns%5B7%5D%5Borderable%5D=false&columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B8%5D%5Bdata%5D=code&columns%5B8%5D%5Bname%5D=code.code&columns%5B8%5D%5Bsearchable%5D=true&columns%5B8%5D%5Borderable%5D=true&columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B9%5D%5Bdata%5D=id&columns%5B9%5D%5Bname%5D=id&columns%5B9%5D%5Bsearchable%5D=false&columns%5B9%5D%5Borderable%5D=true&columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&order%5B0%5D%5Bcolumn%5D=9&order%5B0%5D%5Bdir%5D=desc&start=' + str(arg) + '&length=15&search%5Bvalue%5D=' + vuln_name + '&search%5Bregex%5D=false&author=&port=&type=&tag=&platform=&_=' + str(session_id)
		headers = {
			'Host': 'www.exploit-db.com',
			'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0',
			'Accept': 'application/json, text/javascript, */*; q=0.01',
			'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
			'Accept-Encoding': 'gzip, deflate',
			'Referer': 'https://www.exploit-db.com/',
			'X-Requested-With': 'XMLHttpRequest',
			'Connection': 'close',
			'Cookie': 'XSRF-TOKEN=eyJpdiI6IkU1NDZRXC9HQmJFa2hOSmtxUGkzRjN3PT0iLCJ2YWx1ZSI6IkpOMjZOcStSM3hWYTZcL2Nhc2g4MEVnd3ROWXlYRnh0NE9KdDhFa3JwNnE1UExyY0J6ZUw3K201SmR3b21Zc3B0IiwibWFjIjoiNTBlZjhmNjBhNWZmMDFmZGEzMjk4NWE5MTgwNDhlMjIxYWRjYmZkODk2MDMwY2M4ZTFiZjdmMjFiMDEwZDlhYyJ9; exploit_database_session=eyJpdiI6IldOXC91UGpcLzVUMDVLWUY4K3daM3ZYdz09IiwidmFsdWUiOiJGaENaMlJDZ1hrV0t1cmJZRCtWeDRaVlpleWlmbitjckVMTDJnd0RrSlZtYzF2MkRNMXhFRlNTMFRTcnNUQ2tSIiwibWFjIjoiOGY3ZDY1ZGY3YTU1YWQ5ZWM1NDU3NWI2Mjg3Y2M3N2U2MDU2ZTE1Mzg0NWIzZTgxN2FhZmZmZDlkNTc5NjZjMiJ9; CookieConsent=-1; _ga=GA1.3.2084911368.1596547587; _gid=GA1.3.447651601.1596547587'
		  }
		resp = requests.get(url,headers=headers)
		json_text = json.loads(resp.text)
		tmp = json_text['data']
		current_row = arg + 2

		for vuln in tmp:
		####################  		cve  			############################
			cve_num = ""
			for vuln_cve in vuln['code']:
				cve_num = cve_num + "CVE-" + vuln_cve['code'] + ","
				#print(vuln_cve['code'])
			ws.cell(row=current_row, column=1).value = cve_num
		####################  		edbid  			############################
			#print(vuln['id'])
			ws.cell(row=current_row, column=2).value = vuln['id']
		####################  		漏洞描述  		############################
			print(vuln['description'][1])
			ws.cell(row=current_row, column=3).value = vuln['description'][1]
		####################  		漏洞公开日期  	############################	
			#print(vuln['date_published'])
			ws.cell(row=current_row, column=4).value = vuln['date_published']
		####################  		作者  			############################	
			#print(vuln['author']['name'])	
			ws.cell(row=current_row, column=5).value = vuln['author']['name']
		####################  		类型  			############################	
			#print(vuln['type']['display'])	
			ws.cell(row=current_row, column=6).value = vuln['type']['display']
		####################  		平台  			############################	
			#print(vuln['platform']['platform'])	
			ws.cell(row=current_row, column=7).value = vuln['platform']['platform']
			current_row = current_row + 1		#excel增加一行

	wb.save('exploit_db\\' + vuln_name + '.xlsx')




if __name__ == "__main__":
	exploit_db()